{"version":3,"sources":["mlh-prep.png","Components/ErrorComponent.js","Components/ResultsComponent.js","Components/SearchComponent.js","Components/RequiredItem.js","assets/img/cap.png","assets/img/gloves.png","assets/img/jacket.png","assets/img/raincoat.png","assets/img/scarf.png","assets/img/sunglasses.png","assets/img/suncream.png","assets/img/umbrella.png","assets/img/water_proof_boots.png","Components/RequiredItems.js","Hooks/useLocation.js","Components/GetMyLocationButton.js","Components/Map.js","Components/App.js","index.js"],"names":["ErrorComponent","error","message","ResultsComponent","isLoaded","results","className","console","log","weather","main","feels_like","name","sys","country","SearchComponent","city","changeCity","type","value","onChange","event","target","RequiredItem","img_src","src","alt","RequiredItems","weatherKind","items","RainCoat","WaterProofBoots","Umbrella","SunGlasses","Gloves","Jacket","Scarf","Cap","SunCream","undefined","map","ele","index","useLocation","useState","userCoords","setUserCoords","success","pos","coords","latitude","longitude","warn","useEffect","navigator","geolocation","getCurrentPosition","SearchMyLocationButton","getUserLocation","onClick","Map","setIsLoaded","setResults","setError","mapContainer","useRef","lng","lat","zoom","current","mapboxgl","container","style","center","on","e","fetch","lngLat","process","then","res","json","result","ref","App","setCity","geolocateUser","logo","length","accessToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef14d3fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mlh-prep.270f6887.png\";","\r\nexport default function ErrorComponent({error}) {\r\n  return (\r\n    <div>Error: {error.message}</div>\r\n  )\r\n}","\r\nexport default function ResultsComponent({isLoaded, results}) {\r\n\r\n  return (\r\n      <div className=\"Results\">\r\n        {!isLoaded && <h2>Loading...</h2>}\r\n        {console.log(results)}\r\n        {isLoaded && results && <>\r\n          <h3>{results.weather[0].main}</h3>\r\n          <p>Feels like {results.main.feels_like}Â°C</p>\r\n          <i><p>{results.name}, {results.sys.country}</p></i>\r\n        </>}\r\n      </div>\r\n  )\r\n}\r\n","\r\nexport default function SearchComponent({city, changeCity}) {\r\n\r\n    return (\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={event => changeCity(event.target.value)} />\r\n    )\r\n}","const RequiredItem = ({img_src}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={img_src} alt=\"required item\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequiredItem\r\n","export default __webpack_public_path__ + \"static/media/cap.474e6898.png\";","export default __webpack_public_path__ + \"static/media/gloves.45497ed2.png\";","export default __webpack_public_path__ + \"static/media/jacket.58fadea5.png\";","export default __webpack_public_path__ + \"static/media/raincoat.376a8ef2.png\";","export default __webpack_public_path__ + \"static/media/scarf.fbb31feb.png\";","export default __webpack_public_path__ + \"static/media/sunglasses.6c5f1538.png\";","export default __webpack_public_path__ + \"static/media/suncream.d8793979.png\";","export default __webpack_public_path__ + \"static/media/umbrella.df170598.png\";","export default __webpack_public_path__ + \"static/media/water_proof_boots.a48e94f8.png\";","import RequiredItem from './RequiredItem'\r\nimport Cap from '../assets/img/cap.png'\r\nimport Gloves from '../assets/img/gloves.png' \r\nimport Jacket from '../assets/img/jacket.png'\r\nimport RainCoat from '../assets/img/raincoat.png' \r\nimport Scarf from '../assets/img/scarf.png' \r\nimport SunGlasses from '../assets/img/sunglasses.png' \r\nimport SunCream from '../assets/img/suncream.png' \r\nimport Umbrella from '../assets/img/umbrella.png' \r\nimport WaterProofBoots from '../assets/img/water_proof_boots.png' \r\n\r\nconst RequiredItems = ({ weatherKind }) => {\r\n\r\n    const items = {\r\n        'Rain': [RainCoat, WaterProofBoots, Umbrella],\r\n        'Snow': [SunGlasses, Gloves, Jacket, Scarf],\r\n        'Clear': [SunGlasses, Cap, SunCream]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {items[weatherKind] !== undefined && items[weatherKind].map((ele, index) => { \r\n                return <RequiredItem img_src={ele} key={index} />})}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RequiredItems\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useLocation = () => {\r\n  const [userCoords, setUserCoords] = useState([]);\r\n  \r\n  const success = (pos) => {\r\n    setUserCoords([pos.coords.latitude, pos.coords.longitude])\r\n  }\r\n\r\n  const error = (error) => {\r\n    console.warn(error);\r\n  }\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(success, error)\r\n  }, []);\r\n\r\n  return userCoords;\r\n};\r\n\r\nexport default useLocation;","export default function SearchMyLocationButton({getUserLocation}) {\r\n    return (\r\n      <button onClick={getUserLocation}>Get My Location</button>\r\n    )\r\n  }","import { useEffect, useState, useRef } from \"react\";\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax \r\n\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoicm95Z2JldiIsImEiOiJjbDFjYzF2ajUwMHgzM2NwcXBzdWVxM3ZvIn0.2k8N-UN2Y7ZdT5vwml9QAw';\r\n\r\nexport default function Map({ setIsLoaded, setResults, setError }) {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-70.9);\r\n    const [lat, setLat] = useState(42.35);\r\n    const [zoom, setZoom] = useState(9);\r\n\r\n    useEffect(() => { // mapbox\r\n    if (map.current) return; // initialize map only once\r\n\r\n    map.current = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [lng, lat],\r\n        zoom: zoom\r\n    });\r\n\r\n    map.current.on('click', (e) => {\r\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${e.lngLat.lat}&lon=${e.lngLat.lng}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\r\n        .then(res => res.json())\r\n        .then(\r\n        (result) => {\r\n            if (result['cod'] !== 200) {\r\n            setIsLoaded(false)\r\n            } else {\r\n            setIsLoaded(true);\r\n            setResults(result);\r\n            }\r\n        },\r\n        (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n        }\r\n        )\r\n    });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n          <div ref={mapContainer} className=\"map-container\" />\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport '../App.css';\r\nimport logo from '../mlh-prep.png';\r\nimport ErrorComponent from \"./ErrorComponent\";\r\nimport ResultsComponent from \"./ResultsComponent\";\r\nimport SearchComponent from \"./SearchComponent\";\r\nimport RequiredItems from \"./RequiredItems\";\r\nimport useLocation from \"../Hooks/useLocation\";\r\nimport GetMyLocationButton from \"./GetMyLocationButton\";\r\nimport Map from \"./Map\";\r\n\r\nexport default function App() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [city, setCity] = useState(\"New York City\")\r\n  const [results, setResults] = useState(null);\r\n\r\n  const geolocateUser = useLocation();\r\n\r\n  // Fetch data based on geolocation\r\n  function getUserLocation() {\r\n    if (geolocateUser.length !== 0) {\r\n      fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${geolocateUser[0]}&lon=${geolocateUser[1]}&limit=1&appid=${process.env.REACT_APP_APIKEY}`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setCity(result[0].name);\r\n          },\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  // Fetch data based on user input\r\n  useEffect(() => { // weather\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (result['cod'] !== 200) {\r\n            setIsLoaded(false)\r\n          } else {\r\n            setIsLoaded(true);\r\n            setResults(result);\r\n          }\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [city])\r\n\r\n  if (error) {\r\n    return <ErrorComponent error={error} />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <div>\r\n          <img className=\"logo\" src={logo} alt=\"MLH Prep Logo\"></img>\r\n          <h2>Enter a city below ð</h2>\r\n          <SearchComponent city={city} changeCity={setCity} />\r\n          <GetMyLocationButton getUserLocation={getUserLocation}/>\r\n          <ResultsComponent isLoaded={isLoaded} results={results}/>\r\n          {isLoaded && results && <RequiredItems weatherKind={results.weather[0].main} />}\r\n          <Map setIsLoaded={setIsLoaded} setResults={setResults} setError={setError} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport './index.css';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}